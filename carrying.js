//  https://habr.com/ru/company/ruvds/blog/427295/
// Каррирование или карринг (currying) в функциональном программирование —
// это преобразование функции с множеством аргументов в набор вложенных функций с одним аргументом.
//     При вызове каррированной функции с передачей ей одного аргумента,
//     она возвращает новую функцию, которая ожидает поступления следующего аргумента.
//     Новые функции, ожидающие следующего аргумента, возвращаются при каждом вызове каррированной функции —
//     до тех пор, пока функция не получит все необходимые ей аргументы. Ранее полученные аргументы,
//     благодаря механизму замыканий, ждут того момента, когда функция получит всё,
//     что ей нужно для выполнения вычислений.
//     После получения последнего аргумента функция выполняет вычисления и возвращает результат.
//
//
//
//     Говоря о каррировании, можно сказать, что это процесс превращения функции с несколькими аргументами в функцию с меньшей арностью.
//
//     Арность — это количество аргументов функции.

//      -- Не каррированный вариант --
// function carry(a, b, c) {
//     return a + b + c;
// }
//
// console.log(carry(1, 2, 3));


//      -- Каррированный вариант --
// function carry(a) {
//     return (b) => {
//         return (c) => {
//             return a * b * c;
//         }
//     }
// }
//
// document.body.innerText = carry(1)(2)(3);
// console.log(carry(1)(2)(3));

// --- Каррирование базируется на следующей идее: на основе некоей функции создают другую функцию, которая возвращает специализированную функцию. ---
//
// При каррировании число вложенных функций равно числу аргументов исходной функции. Каждая из этих функций ожидает собственный аргумент.
// При этом понятно, что если функция аргументов не принимает, или принимает лишь один аргумент, то каррировать её нельзя.


// Пример прокаррированной функции, которая считает цену товара учитывая скидку
// ----- //
function itemDiscount(discount) {
    return (price) => {
        return price * discount
    }
}

let tenProcentDiscount = itemDiscount(0.1);
console.log(tenProcentDiscount(550));
// ----- //


